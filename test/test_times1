allocate_loads in test_all.c
obj size: 5k (5000)
no. of objs: 50
no. of allocs: 10k (10,000)
total stored bytes: 250k (250,000)
total alloc bytes: 50M (50,000,000)


time taken:
956ms (diff=955904)  (no collector, unlimited heap)
bus error            (Boehm, with cap modifications)
4017ms (diff=40,168,62)(my collector, copying, heap size = 65536, max=1,900,000 bytes (before+after collection))
16s (diff=16,024,885)  (Boehm, max heap=1,900,000 bytes (1.9M), actual heap measured=901120 (starting with 65536))
57s (diff=565,999,694???) (my collector, copying, heap size=1013, 4000 before collect, 900,000 after collect)
146s (diff=146,004,058)   (my collector, copying, initial heap=65536, 65536 before collect, 1,900,000 after collect, FINAL HEAP SIZE=0x40000 (262kB), 3318 collections)



--------------------------------

allocate_loads in test_all.c
obj size: 16k (16,384)
no. of objets: 50
no. of allocs: 100k (100,000)
total stored bytes: 819k (819,200)
total allocated bytes: 1.6G (1,683,400,000)

time taken:
319s (diff=318,838,303) (Boehm, unlimited heap size, final heap size measured at 1,769,472)
never finished (well over ~20 min): my collector, unlimited heap size starting at 65536 (but fixing it to 65536 max growth before collection)
never finished (well over ~20 min): my collector, 1,769,472 max heap size after collection, starting at 65536 (but fixing it to 65536 max growth before collection)


no. allocs 10,000:
total allocated bytes: 164 MB (163,840,000)
time taken:
101s (diff=101,256,900) (my collector, 1,769,472 max heap size after collection, starting at 65536 (but fixing it to 65536 max growth before collection), actual final heap size 0x100000 (1 MB), 667 collections
30s  (diff=29,533,878)  (my collector, 1,769,472 max heap size before+after collection, starting at 65536, 168 collections)
32s  (diff=31,609,457)  (Boehm, 1,769,472 heap size at end)

no. allocs 1,000: (total allocated 16MB)
my collector: 
#define GC_THREAD_LOCAL_HEAP_SIZE                              1000
#define GC_THREAD_LOCAL_HEAP_MAX_SIZE_BEFORE_COLLECTION        1000000
#define GC_THREAD_LOCAL_HEAP_MAX_SIZE                          2000000
(Heap didn't grow beyond 1MB).
Took 13s.

Boehm collector:
(unlimited heap)
(Heap 1,769,472)
Took 4321ms.

My collector:
#define GC_THREAD_LOCAL_HEAP_SIZE                              65536
#define GC_THREAD_LOCAL_HEAP_MAX_SIZE_BEFORE_COLLECTION        1769472
#define GC_THREAD_LOCAL_HEAP_MAX_SIZE                          1769472
Took 3706ms, 4423ms.

My GENERATIONAL collector:
#define GC_THREAD_LOCAL_HEAP_SIZE                              65536
#define GC_OLD_GENERATION_SEMISPACE_SIZE                       1769472
#define GC_THREAD_LOCAL_HEAP_MAX_SIZE_BEFORE_COLLECTION        65536
#define GC_THREAD_LOCAL_HEAP_MAX_SIZE                          65536
#define GC_OLD_GENERATION_SEMISPACE_MAX_SIZE_BEFORE_COLLECTION 1769472
#define GC_OLD_GENERATION_SEMISPACE_MAX_SIZE                   1769472
(249 minor and 118 major collections)
Took 22s.



--------------------------------
old_pause_time_test:
allocate floor(65535/512) many 512-byte objects, then call the garbage collector.
Repeated 100 times. Call to collector is timed (not malloc, only collect()).

MY COLLECTOR:
heap size 65536
NOTE: tf_collect called directly to bypass heap growth
avg: 909us
total: 91ms (90,852us)
min: 408us
max: 27ms (27,414us)

BOEHM:
heap size 65536 (didn't change)
NOTE: called GC_gcollect. Forced full collection where unnecessary?
avg: 39ms (38,719us)
total: 3872ms (3,871,991us)
min: 30ms (29,715us)
max: 64ms (64,271us)




----------------
pause time test with 10 10Mbyte allocations:
  int number_of_allocations = 10;
  size_t allocation_size    = 10000000;

##my collector##
#define GC_THREAD_LOCAL_HEAP_SIZE             65536
#define GC_THREAD_LOCAL_HEAP_MAX_SIZE_BEFORE_COLLECTION        65536
#define GC_THREAD_LOCAL_HEAP_MAX_SIZE                          50000000
result [1] avg=2857ms total=29s min=1846ms max=9145ms final_heap=0x1332d00 (20131072) (20MB)
result [2] avg=2836ms total=28s min=1857ms max=8873ms final_heap=0x1332d00 (20131072) (20MB)
Behaviour: two quick allocs (~1.3s pause), a long collection (~4.1s pause), and constant 2s pauses thereafter.

###BOEHM###:
#define GC_BOEHM_MAX_HEAP_SIZE                0
result [1] avg=2014ms total=20s min=1588ms max=2989ms final_heap=20332544 (20MB)
result [2] avg=2024ms total=20s min=1648ms max=2990ms final_heap=20332544 (20MB)


##my collector##:
#define GC_THREAD_LOCAL_HEAP_SIZE             50000000
#define GC_THREAD_LOCAL_HEAP_MAX_SIZE_BEFORE_COLLECTION        50000000
#define GC_THREAD_LOCAL_HEAP_MAX_SIZE                          50000000
result [1] avg=1892ms total=19s min=1298ms max=4189ms


---------------------
same as above but with 20 10MByte allocs

###BOEHM###:
#define GC_BOEHM_MAX_HEAP_SIZE                0
result [1] avg=1998ms total=40s min=1615ms max=3050ms final_heap=20332544 (20MB)

##me##:
#define GC_THREAD_LOCAL_HEAP_SIZE                              20332544
#define GC_THREAD_LOCAL_HEAP_MAX_SIZE_BEFORE_COLLECTION        20332544
#define GC_THREAD_LOCAL_HEAP_MAX_SIZE                          20332544
result [1] avg=2088ms total=42s min=1323ms max=4147ms

##me##:
#define GC_THREAD_LOCAL_HEAP_SIZE                              65536
#define GC_THREAD_LOCAL_HEAP_MAX_SIZE_BEFORE_COLLECTION        20332544
#define GC_THREAD_LOCAL_HEAP_MAX_SIZE                          20332544


##no-gc (with freeing)##:


---------pause_time_test--------

key: I=initial heap size, B=max grow before collecting, A=max grow after collecting, F=final measured heap size

generational key: y=young, o=old

1000 1000-byte allocations
My collector: I=65536, B=A=F=196608: avg=195us, total=196ms, min=29us, max=59ms
Boehm:        I=65536, F=196608:     avg=455us, total=456ms, min=22us, max=65ms
My collector: I=B=A=F=65536, avg=97us, total=98ms, min=31us, max=26ms
My collector: I=B=A=F=65536/2, avg=130us, total=131ms, min=29us, max=28ms
My generational: yI=yB=yA=yF=oI=oB=oA=oF=65536, avg=139us, total=320ms, min=27us, max=35ms

10,000 1000-byte allocations
My collector: I=65536, B=A=F=196608: avg=67us, total=675ms, min=29us, max=84ms
Boehm:        I=65536, F=196608:     avg=392us, total=3922ms, min=22us, max=64ms

100,000 1000-byte allocations
My collector: I=65536, B=A=F=196608: avg=69us, total=6995ms, min=29us, max=245ms
Boehm:        I=65536, F=196608:     avg=402us, total=40s, min=21us, max=69ms

1000 5000-byte allocations
My collector: I=65536, B=A=F=196608: avg=264us, total=264ms, min=29us, max=67ms
Boehm:        I=65536, F=270336:     avg=2ms, total=2076ms, min=378us, max=65ms
My collector: I=65536, B=A=F=270336: avg=311us, total=312ms, min=29us, max=105ms

10,000 5000-byte allocations
My collector: I=65536, B=A=F=196608: avg=114us, total=1147ms, min=29us, max=72ms
Boehm:        I=65536, F=270336:     avg=3ms, total=25s, min=376us, max=1015ms
My collector: I=65536, B=A=F=270336: avg=106us, total=1067ms, min=29us, max=105ms

1000 10,000-byte allocations:
My collector: I=65536, B=A=F=196608: avg=399us, total=400ms, min=28us, max=77ms
Boehm:        I=65536, F=196608:     avg=4ms, total=3842ms, min=504us, max=65ms

10,000 10,000-byte allocations:
My collector: I=65536, B=A=F=196608: avg=212us, total=2120ms, min=28us, max=87ms
Boehm:        I=65536, F=196608:     avg=4ms, total=41s, min=504us, max=663ms
No GC (with free):                   avg=425us, total=4255ms, min=226us, max=151ms
My collector: I=65536=B=A=F:         avg=591us, total=5920ms, min=28us, max=32ms

1000 100,000-byte allocations:
Boehm:        I=65536, F=569344:     avg=22ms, total=22s, min=3ms, max=(923ms)?
My collector: I=65536, B=A=F=569344: avg=5ms,  total=542ms, min=28us, max=134ms

1000 1,000,000-byte allocations:
Boehm:        I=65536, F=2453504:    avg=234ms, total=234s, min=200ms, max=1109ms
My collector: I=65536, B=A=F=2453504:avg=199ms, total=199s, min=172ms, max=1063ms


---ML test---
(With -O2)
Recursive sum of a series evaluated at 60

Boehm:           I=65536, F=65536, time=633ms,339ms,360ms,347ms
My generational: yI=yB=yA=yF=6000, oI=65536, oB=oA=196608, oF=131072, time=436ms,462ms,426ms,455ms,411ms,452ms
My copying:      I=B=A=F=65536, time=95ms,269ms,106ms,83ms,262ms,256ms,115ms,262ms,103ms,252ms,258ms,256ms
