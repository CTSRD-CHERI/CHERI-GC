# These are system-dependent
#CHERI=/home/munraj/projectscratch/ctsrd-svn/cherilibs-build/trunk/tools/sdk
CHERI=/home/munraj/projectscratch/SDK
#CHERI=/home/munraj/projectscratch/SDK_NEW_1/sdk
SSH_PASSWD_FILE=/home/munraj/ssh_passwd
SSH_PRIV_KEY=/home/munraj/.ssh/mbv21
WENGER_USER=mbv21
WENGER_ADDR=wenger
WENGER_FILE_ZFS=/exports/users/mbv21/cloud2gc2test
WENGER_FILE_ZFS_MLTEST=/exports/users/mbv21/cloud2mltest
WENGER_FILE_ZFS_MLTEST_BOEHM=/exports/users/mbv21/cloud2mltest-boehm
WENGER_FILE_ZFS_MLTEST_NO_GC=/exports/users/mbv21/cloud2mltest-no-gc
CLOUD2_USER=mbv21
CLOUD2_PASSWORD=mbv21
CLOUD2_ADDR=cloud2
CLOUD2_FILE_ZFS=/mnt/mbv21zfs/cloud2gc2test

# To test against the Boehm collector
BOEHM_GC_DIR=../gc1/gc-7.2
# BOEHM_GC_LIB_DIR should point to where gc.a is.
BOEHM_GC_LIB_DIR=$(BOEHM_GC_DIR)
BOEHM_GC_INC_DIR=$(BOEHM_GC_DIR)/include/

# Location of memwatch, for debugging the non-gc ML test
MEMWATCH_DIR=../memwatch
# Comment these out to disable memwatch
#MEMWATCH_FLAGS=-DMEMWATCH -I$(MEMWATCH_DIR)
#MEMWATCH_SOURCES=$(MEMWATCH_DIR)/memwatch.c

# Targets:
# lib: build the GC library from src/* to objects/gc.a
# gctest: build the test program in test/* to objects/gctest. Assumes existence of objects/gc.a.
# clean: remove objects/*.
# push: push objects/gctest to $(WENGER_ADDR):$(WENGER_FILE_ZFS).
# run: run $(CLOUD2_ADDR):$(CLOUD2_FILE_ZFS).
# With any luck, $(WENGER_ADDR):$(WENGER_FILE_ZFS) should be the same file as $(CLOUD2_ADDR):$(CLOUD2_FILE_ZFS).
# everything: clean lib gctest push run

PATH:=$(CHERI):$(PATH)
CC=PATH=$(PATH) $(CHERI)/bin/clang --sysroot $(CHERI) -integrated-as -msoft-float -O2
CFLAGS=-I$(GC_PRIV_INCLUDE)

GC_SOURCES=objects/gc_init.o objects/gc_malloc.o objects/gc_debug.o \
           objects/gc_low.o objects/gc_collect.o objects/gc_time.o \
           objects/gc_remset.o objects/gc_bitmap.o objects/gc_memcpy.o
GC_PUBLIC_INCLUDE=src/inc/
GC_PRIV_INCLUDE=src/inc/
TEST_SOURCES=test/test.c #`ls -m test/*.c | sed s/,//g`
MLTEST_SOURCES=ml/lex.c ml/ml.c ml/parse.c ml/eval.c ml/ml_time.c

all: everything

objects/%.o : src/%.c
	$(CC) $(CFLAGS) -c -o $@ $< && \
	$(CC) $(CFLAGS) -S -o $@.s $< && \
	$(CC) $(CFLAGS) -E -o $@.E $<

clean:
	rm -rf objects

lib_init:
	mkdir -p objects

lib_final: $(GC_SOURCES)
	ar rcs objects/gc.a objects/*.o

lib: lib_init $(GC_SOURCES) lib_final

loc:
	@echo Core collector: `cat src/*.c src/inc/*.h | wc -l` lines && \
	echo ML interpreter: `cat ml/*.c ml/*.h | wc -l` lines && \
	echo Tests: `cat test/*.c test/*.h | wc -l` lines && \
	echo Total: `cat ml/*.c ml/*.h src/*.c src/inc/*.h test/*.c test/*.h | wc -l` lines

gctest:
	PATH=$(PATH) $(CC) -DGC_CHERI -S -o objects/gctest.o.s -I$(GC_PUBLIC_INCLUDE) $(TEST_SOURCES) && \
	PATH=$(PATH) $(CC) -DGC_CHERI -c -o objects/gctest.o -I$(GC_PUBLIC_INCLUDE) $(TEST_SOURCES) && \
	PATH=$(PATH) $(CC) -o objects/gctest objects/gctest.o objects/gc.a && \
	rm objects/gctest.o

mltest:
	PATH=$(PATH) $(CC) -DGC_CHERI -o objects/mltest -I$(GC_PUBLIC_INCLUDE) objects/*.o $(MLTEST_SOURCES) && \
	PATH=$(PATH) $(CC) -DGC_CHERI -S -o objects/mltest.parse.s -I$(GC_PUBLIC_INCLUDE) ml/parse.c && \
	PATH=$(PATH) $(CC) -DGC_CHERI -E -o objects/mltest.parse.E -I$(GC_PUBLIC_INCLUDE) ml/parse.c

mltest-boehm:
	mkdir -p objects/boehm && \
	cp $(BOEHM_GC_LIB_DIR)/gc.a objects/boehm/boehm.a && \
	cd objects/boehm && ar -x boehm.a && cd ../.. && \
	PATH=$(PATH) $(CC) -DGC_BOEHM -o objects/mltest-boehm -I$(BOEHM_GC_INC_DIR) $(MLTEST_SOURCES) objects/boehm/*.o

mltest-no-gc:
	PATH=$(PATH) $(CC) -DGC_NONE $(MEMWATCH_FLAGS) -o objects/mltest-no-gc $(MEMWATCH_SOURCES) $(MLTEST_SOURCES)


PASSWORD=`cat $(SSH_PASSWD_FILE)`
CMD1=scp -i $(SSH_PRIV_KEY) objects/gctest $(WENGER_USER)@$(WENGER_ADDR):$(WENGER_FILE_ZFS)
CMD2=ssh $(CLOUD2_USER)@$(CLOUD2_ADDR) $(CLOUD2_FILE_ZFS)
push:
	echo "[i] pushing file to wenger ZFS" && \
	echo -e "set timeout 60\nspawn $(CMD1)\nexpect \": \"\nsend \"$(PASSWORD)\\\\n\"\ninteract\n" > cloud4_push_helper.expect && \
	expect -f cloud4_push_helper.expect && \
	rm -f cloud4_push_helper.expect
run:
	echo "[i] running executable on cloud2" && \
	echo -e "set timeout 60\nspawn $(CMD2)\nexpect \": \"\nsend \"$(PASSWORD)\\\\n\"\nexpect \":\"\nsend \"$(CLOUD2_PASSWORD)\\\\n\"\ninteract\n" > cloud4_push_helper.expect && \
	expect -f cloud4_push_helper.expect && \
	rm -f cloud4_push_helper.expect
CMD3=scp -i $(SSH_PRIV_KEY) objects/mltest $(WENGER_USER)@$(WENGER_ADDR):$(WENGER_FILE_ZFS_MLTEST)
CMD4=scp -i $(SSH_PRIV_KEY) objects/mltest-boehm $(WENGER_USER)@$(WENGER_ADDR):$(WENGER_FILE_ZFS_MLTEST_BOEHM)
CMD5=scp -i $(SSH_PRIV_KEY) objects/mltest-no-gc $(WENGER_USER)@$(WENGER_ADDR):$(WENGER_FILE_ZFS_MLTEST_NO_GC)
pushml:
	echo "[i] pushing file to wenger ZFS" && \
	echo -e "set timeout 60\nspawn $(CMD3)\nexpect \": \"\nsend \"$(PASSWORD)\\\\n\"\ninteract\n" > cloud4_push_helper.expect && \
	expect -f cloud4_push_helper.expect && \
	rm -f cloud4_push_helper.expect
pushml-boehm:
	echo "[i] pushing file to wenger ZFS" && \
	echo -e "set timeout 60\nspawn $(CMD4)\nexpect \": \"\nsend \"$(PASSWORD)\\\\n\"\ninteract\n" > cloud4_push_helper.expect && \
	expect -f cloud4_push_helper.expect && \
	rm -f cloud4_push_helper.expect
pushml-no-gc:
	echo "[i] pushing file to wenger ZFS" && \
	echo -e "set timeout 60\nspawn $(CMD5)\nexpect \": \"\nsend \"$(PASSWORD)\\\\n\"\ninteract\n" > cloud4_push_helper.expect && \
	expect -f cloud4_push_helper.expect && \
	rm -f cloud4_push_helper.expect
everything: clean lib gctest push run loc
almost_everything: clean lib gctest push loc
ml: clean lib mltest pushml
ml-all: clean lib mltest mltest-boehm mltest-no-gc pushml pushml-boehm pushml-no-gc
